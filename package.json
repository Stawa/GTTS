{
  "name": "@stawa/gtts",
  "author": "Stawa",
  "version": "0.0.0",
  "description": "This project converts written material into speech by using Google AI (Gemini) for text creation or internet searches.",
  "module": "index.ts",
  "type": "module",
  "main": "dist/index.js",
  "types": "dist/types",
  "license": "MIT",
  "homepage": "https://github.com/Stawa/GTTS",
  "engines": {
    "node": ">=18.0.0"
  },
  "scripts": {
    "prepare": "npm run build",
    "build": "rimraf dist && tsc --build",
    "postinstall": "npm run build && npm run version",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "version": "node -e \"const https = require('https'); const fs = require('fs'); const options = { hostname: 'api.github.com', path: '/repos/Stawa/GTTS/tags', headers: { 'User-Agent': 'Node.js' } }; https.get(options, (res) => { let data = ''; res.on('data', (chunk) => data += chunk); res.on('end', () => { const tags = JSON.parse(data); if (tags.length > 0) { const latestVersion = tags[0].name.startsWith('v') ? tags[0].name.slice(1) : tags[0].name; const pkg = JSON.parse(fs.readFileSync('package.json')); if (pkg.version !== latestVersion) { pkg.version = latestVersion; fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2)); console.log('Version updated to ' + latestVersion); } else { console.log('Version unchanged: ' + latestVersion); } } else { console.log('No tags found'); } }); }).on('error', (e) => console.error('Error fetching version:', e.message));\"",
    "version:test": "npm run version && node -e \"console.log(JSON.parse(require('fs').readFileSync('package.json', 'utf8')).version)\""
  },
  "devDependencies": {
    "@types/bun": "latest",
    "tsx": "^4.17.0"
  },
  "peerDependencies": {
    "typescript": "^5.5.4"
  },
  "dependencies": {
    "@deepgram/sdk": "^3.5.1",
    "@google-cloud/text-to-speech": "^5.4.0",
    "@google/generative-ai": "^0.17.1",
    "@iamtraction/google-translate": "^2.0.1",
    "axios": "^1.7.5",
    "dotenv": "^16.4.5",
    "music-metadata": "^10.3.1",
    "prettier": "^3.3.3",
    "rimraf": "^6.0.1"
  }
}